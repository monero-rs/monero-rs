name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Rust Stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Run format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --all-targets --all-features -- -D warnings

  mdtomlfmt:
    name: Generic format (md,toml)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run dprint
      run: |
        curl -fsSL https://dprint.dev/install.sh | sh
        /home/runner/.dprint/bin/dprint check

  build:
    name: Build
    strategy:
      matrix:
        rust: [
          1.51.0,
          stable,
          nightly
        ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        profile: minimal

    - uses: Swatinem/rust-cache@v2.2.0

    - name: Build (default)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose

    - name: Build (serde)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --no-default-features --features serde

    - name: Build (experimental)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --no-default-features --features experimental

    - name: Build (all features)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --all-features

  test:
    name: Test
    strategy:
      matrix:
        rust: [
          stable,
          nightly
        ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        profile: minimal

    - uses: Swatinem/rust-cache@v2.2.0

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --all-features
